1. Installation:

    $ npm install --save redux
    $ npm install --save react-redux

    IMPORTANT:

    At the moment, there seems to be an issue when using react-redux version 7. Simply install version 6 by running:

        $ npm install --save react-redux@6

    (when I show you how to install that package in the next lecture).

2. Create store structure. See the 'store' folder

    - src
      | - store
        | - actions
          | actionTypes.js
          | index.js
          | places.js
        | - redurcers
          | places.js

3. Import and set up Redux in ReactNative (Add in the index.js file)

    import React from "react";
    import { AppRegistry } from "react-native";
    import { Provider } from "react-redux";
    import App from "./App";
    import configuraStore from "./src/store/configureStore";
    import { name as appName } from "./app.json";

    const store = configuraStore();

    const RNRedux = () => (
    <Provider store={store}>
        <App />
    </Provider>
    );

    AppRegistry.registerComponent(appName, () => RNRedux);

4. Subscribe App.js to React-redux


    import React, { Component } from "react";
    import { connect } from "react-redux";
    ...

    import {
        addPlace,
        deletePlace
    } from "./src/store/actions/index";

    class App extends Component {  // Important: Delete the "export class" because we are gonna export later with the connect.
        placeAddedHandler = placeName => {
            this.props.onAddPlace(placeName);
        };

        placeDeletedHandler = () => {
            this.props.onDeletePlace();
        };

        render() {
            ...
        }
    }

    const mapDispatchToProps = dispatch => {
        return {
            onAddPlace: name => dispatch(addPlace(name)),
            onDeletePlace: () => dispatch(deletePlace()),
        };
    };

    export default connect(
        mapStateToProps,
        mapDispatchToProps
    )(App);

